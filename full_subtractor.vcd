$date
	Mon Sep 23 15:26:19 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module full_subtractor_tb $end
$var wire 1 ! diff_st $end
$var wire 1 " diff_df $end
$var wire 1 # diff_bh $end
$var wire 1 $ borr_st $end
$var wire 1 % borr_df $end
$var wire 1 & borr_bh $end
$var reg 1 ' a $end
$var reg 1 ( b $end
$var reg 1 ) c $end
$scope module fullsubtractor1 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 % borr $end
$var wire 1 ) c $end
$var wire 1 " diff $end
$upscope $end
$scope module fullsubtractor2 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 ) c $end
$var reg 1 & borr $end
$var reg 1 # diff $end
$upscope $end
$scope module fullsubtractor3 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 ) c $end
$var wire 1 * xorOut1 $end
$var wire 1 + notOut2 $end
$var wire 1 , notOut1 $end
$var wire 1 ! diff $end
$var wire 1 $ borr $end
$var wire 1 - andOut2 $end
$var wire 1 . andOut1 $end
$scope module and1 $end
$var wire 1 ( b $end
$var wire 1 . c $end
$var wire 1 , a $end
$upscope $end
$scope module and2 $end
$var wire 1 ) b $end
$var wire 1 - c $end
$var wire 1 + a $end
$upscope $end
$scope module not1 $end
$var wire 1 ' a $end
$var wire 1 , b $end
$upscope $end
$scope module not2 $end
$var wire 1 + b $end
$var wire 1 * a $end
$upscope $end
$scope module or1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 $ c $end
$upscope $end
$scope module xor1 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 * c $end
$upscope $end
$scope module xor2 $end
$var wire 1 * a $end
$var wire 1 ) b $end
$var wire 1 ! c $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0.
0-
1,
1+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#5
1%
1$
1"
1&
1#
1-
1!
1)
#10
0-
1.
0+
1*
0)
1(
#15
0"
0#
0!
1)
#20
0%
0$
1"
1!
0&
1#
0.
0)
0(
0,
1'
#25
0"
0#
0!
1)
#30
1+
0*
0)
1(
#35
1%
1$
1"
1&
1#
1-
1!
1)
#40
