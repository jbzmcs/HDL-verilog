$date
	Wed Oct 09 21:57:00 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module decoder3x8_tb $end
$var wire 8 ! Y_st [7:0] $end
$var wire 8 " Y_df [7:0] $end
$var wire 8 # Y_bh [7:0] $end
$var reg 3 $ A [2:0] $end
$var reg 1 % E $end
$scope module dbh $end
$var wire 3 & A [2:0] $end
$var wire 1 % E $end
$var reg 8 ' Y [7:0] $end
$upscope $end
$scope module ddf $end
$var wire 3 ( A [2:0] $end
$var wire 1 % E $end
$var wire 8 ) Y [7:0] $end
$upscope $end
$scope module dst $end
$var wire 3 * A [2:0] $end
$var wire 1 % E $end
$var wire 1 + nA2 $end
$var wire 1 , nA1 $end
$var wire 1 - nA0 $end
$var wire 1 . and4_out3 $end
$var wire 1 / and4_out2 $end
$var wire 1 0 and4_out1 $end
$var wire 1 1 and4_out0 $end
$var wire 1 2 and3_out3 $end
$var wire 1 3 and3_out2 $end
$var wire 1 4 and3_out1 $end
$var wire 1 5 and3_out0 $end
$var wire 1 6 and2_out3 $end
$var wire 1 7 and2_out2 $end
$var wire 1 8 and2_out1 $end
$var wire 1 9 and2_out0 $end
$var wire 1 : and1_out3 $end
$var wire 1 ; and1_out2 $end
$var wire 1 < and1_out1 $end
$var wire 1 = and1_out0 $end
$var wire 8 > Y [7:0] $end
$scope module U1 $end
$var wire 1 ? a $end
$var wire 1 - b $end
$upscope $end
$scope module U10 $end
$var wire 1 @ b $end
$var wire 1 ; c $end
$var wire 1 + a $end
$upscope $end
$scope module U11 $end
$var wire 1 ; a $end
$var wire 1 - b $end
$var wire 1 7 c $end
$upscope $end
$scope module U12 $end
$var wire 1 7 a $end
$var wire 1 % b $end
$var wire 1 A c $end
$upscope $end
$scope module U13 $end
$var wire 1 B b $end
$var wire 1 : c $end
$var wire 1 + a $end
$upscope $end
$scope module U14 $end
$var wire 1 : a $end
$var wire 1 C b $end
$var wire 1 6 c $end
$upscope $end
$scope module U15 $end
$var wire 1 6 a $end
$var wire 1 % b $end
$var wire 1 D c $end
$upscope $end
$scope module U16 $end
$var wire 1 E a $end
$var wire 1 5 c $end
$var wire 1 , b $end
$upscope $end
$scope module U17 $end
$var wire 1 5 a $end
$var wire 1 - b $end
$var wire 1 1 c $end
$upscope $end
$scope module U18 $end
$var wire 1 1 a $end
$var wire 1 % b $end
$var wire 1 F c $end
$upscope $end
$scope module U19 $end
$var wire 1 G a $end
$var wire 1 4 c $end
$var wire 1 , b $end
$upscope $end
$scope module U2 $end
$var wire 1 H a $end
$var wire 1 , b $end
$upscope $end
$scope module U20 $end
$var wire 1 4 a $end
$var wire 1 I b $end
$var wire 1 0 c $end
$upscope $end
$scope module U21 $end
$var wire 1 0 a $end
$var wire 1 % b $end
$var wire 1 J c $end
$upscope $end
$scope module U22 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 3 c $end
$upscope $end
$scope module U23 $end
$var wire 1 3 a $end
$var wire 1 - b $end
$var wire 1 / c $end
$upscope $end
$scope module U24 $end
$var wire 1 / a $end
$var wire 1 % b $end
$var wire 1 M c $end
$upscope $end
$scope module U25 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 2 c $end
$upscope $end
$scope module U26 $end
$var wire 1 2 a $end
$var wire 1 P b $end
$var wire 1 . c $end
$upscope $end
$scope module U27 $end
$var wire 1 . a $end
$var wire 1 % b $end
$var wire 1 Q c $end
$upscope $end
$scope module U3 $end
$var wire 1 R a $end
$var wire 1 + b $end
$upscope $end
$scope module U4 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 = c $end
$upscope $end
$scope module U5 $end
$var wire 1 = a $end
$var wire 1 - b $end
$var wire 1 9 c $end
$upscope $end
$scope module U6 $end
$var wire 1 9 a $end
$var wire 1 % b $end
$var wire 1 S c $end
$upscope $end
$scope module U7 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 < c $end
$upscope $end
$scope module U8 $end
$var wire 1 < a $end
$var wire 1 T b $end
$var wire 1 8 c $end
$upscope $end
$scope module U9 $end
$var wire 1 8 a $end
$var wire 1 % b $end
$var wire 1 U c $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0U
xT
0S
xR
0Q
xP
xO
xN
0M
xL
xK
0J
xI
xH
xG
0F
xE
0D
xC
xB
0A
x@
x?
b0 >
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
bx *
b0 )
bx (
b0 '
bx &
0%
bx $
b0 #
b0 "
b0 !
$end
#10
19
1=
1<
07
01
0/
1-
1,
1+
08
0;
0:
06
05
04
00
03
02
0.
0?
0H
0R
0T
0@
0B
0C
0E
0G
0I
0K
0L
0N
0O
0P
b1 #
b1 '
b1 "
b1 )
0A
0D
0F
0J
0M
0Q
1S
b1 !
b1 >
0U
b0 $
b0 &
b0 (
b0 *
1%
#20
0S
b10 "
b10 )
09
b10 !
b10 >
1U
0-
18
b10 #
b10 '
1?
1T
1C
1I
1P
b1 $
b1 &
b1 (
b1 *
#30
1A
b100 "
b100 )
0=
0<
b100 !
b100 >
0U
17
1-
0,
08
1;
1:
b100 #
b100 '
0?
1H
0T
1@
1B
0C
0I
1L
1O
0P
b10 $
b10 &
b10 (
b10 *
#40
0A
b1000 "
b1000 )
07
b1000 !
b1000 >
1D
0-
16
b1000 #
b1000 '
1?
1T
1C
1I
1P
b11 $
b11 &
b11 (
b11 *
#50
1F
b10000 "
b10000 )
11
14
15
b10000 !
b10000 >
0D
1-
1,
0+
0;
0:
06
b10000 #
b10000 '
0?
0H
1R
0T
0@
0B
0C
1E
1G
0I
1K
0L
1N
0O
0P
b100 $
b100 &
b100 (
b100 *
#60
0F
b100000 "
b100000 )
01
b100000 !
b100000 >
1J
0-
10
b100000 #
b100000 '
1?
1T
1C
1I
1P
b101 $
b101 &
b101 (
b101 *
#70
1M
b1000000 "
b1000000 )
04
05
b1000000 !
b1000000 >
0J
1/
1-
0,
00
13
12
b1000000 #
b1000000 '
0?
1H
0T
1@
1B
0C
0I
1L
1O
0P
b110 $
b110 &
b110 (
b110 *
#80
0M
b10000000 "
b10000000 )
0/
b10000000 !
b10000000 >
1Q
0-
1.
b10000000 #
b10000000 '
1?
1T
1C
1I
1P
b111 $
b111 &
b111 (
b111 *
#90
