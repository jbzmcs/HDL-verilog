$date
	Wed Oct 09 02:04:33 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mux8x1_tb $end
$var wire 1 ! y_st $end
$var wire 1 " y_df $end
$var wire 1 # y_bh $end
$var reg 1 $ i0 $end
$var reg 1 % i1 $end
$var reg 1 & i2 $end
$var reg 1 ' i3 $end
$var reg 1 ( i4 $end
$var reg 1 ) i5 $end
$var reg 1 * i6 $end
$var reg 1 + i7 $end
$var reg 1 , s0 $end
$var reg 1 - s1 $end
$var reg 1 . s2 $end
$scope module m8x1_bh $end
$var wire 1 $ I0 $end
$var wire 1 % I1 $end
$var wire 1 & I2 $end
$var wire 1 ' I3 $end
$var wire 1 ( I4 $end
$var wire 1 ) I5 $end
$var wire 1 * I6 $end
$var wire 1 + I7 $end
$var wire 1 , S0 $end
$var wire 1 - S1 $end
$var wire 1 . S2 $end
$var reg 1 # Y $end
$upscope $end
$scope module m8x1_df $end
$var wire 1 $ I0 $end
$var wire 1 % I1 $end
$var wire 1 & I2 $end
$var wire 1 ' I3 $end
$var wire 1 ( I4 $end
$var wire 1 ) I5 $end
$var wire 1 * I6 $end
$var wire 1 + I7 $end
$var wire 1 , S0 $end
$var wire 1 - S1 $end
$var wire 1 . S2 $end
$var wire 1 " Y $end
$upscope $end
$scope module m8x1_st $end
$var wire 1 $ I0 $end
$var wire 1 % I1 $end
$var wire 1 & I2 $end
$var wire 1 ' I3 $end
$var wire 1 ( I4 $end
$var wire 1 ) I5 $end
$var wire 1 * I6 $end
$var wire 1 + I7 $end
$var wire 1 , S0 $end
$var wire 1 - S1 $end
$var wire 1 . S2 $end
$var wire 1 ! Y $end
$var wire 1 / S2n $end
$var wire 1 0 S1n $end
$var wire 1 1 S0n $end
$var wire 1 2 ORFinal2 $end
$var wire 1 3 ORFinal1 $end
$var wire 1 4 OR4 $end
$var wire 1 5 OR3 $end
$var wire 1 6 OR2 $end
$var wire 1 7 OR1 $end
$var wire 1 8 E9 $end
$var wire 1 9 E8 $end
$var wire 1 : E7 $end
$var wire 1 ; E6 $end
$var wire 1 < E5 $end
$var wire 1 = E4 $end
$var wire 1 > E3 $end
$var wire 1 ? E2 $end
$var wire 1 @ E15 $end
$var wire 1 A E14 $end
$var wire 1 B E13 $end
$var wire 1 C E12 $end
$var wire 1 D E11 $end
$var wire 1 E E10 $end
$var wire 1 F E1 $end
$var wire 1 G D7 $end
$var wire 1 H D6 $end
$var wire 1 I D5 $end
$var wire 1 J D4 $end
$var wire 1 K D3 $end
$var wire 1 L D2 $end
$var wire 1 M D1 $end
$var wire 1 N D0 $end
$scope module and1 $end
$var wire 1 F c $end
$var wire 1 0 b $end
$var wire 1 / a $end
$upscope $end
$scope module and10 $end
$var wire 1 ( b $end
$var wire 1 E c $end
$var wire 1 1 a $end
$upscope $end
$scope module and11 $end
$var wire 1 . a $end
$var wire 1 D c $end
$var wire 1 0 b $end
$upscope $end
$scope module and12 $end
$var wire 1 , a $end
$var wire 1 ) b $end
$var wire 1 C c $end
$upscope $end
$scope module and13 $end
$var wire 1 . a $end
$var wire 1 - b $end
$var wire 1 B c $end
$upscope $end
$scope module and14 $end
$var wire 1 * b $end
$var wire 1 A c $end
$var wire 1 1 a $end
$upscope $end
$scope module and15 $end
$var wire 1 . a $end
$var wire 1 - b $end
$var wire 1 @ c $end
$upscope $end
$scope module and16 $end
$var wire 1 , a $end
$var wire 1 + b $end
$var wire 1 G c $end
$upscope $end
$scope module and2 $end
$var wire 1 $ b $end
$var wire 1 ? c $end
$var wire 1 1 a $end
$upscope $end
$scope module and3 $end
$var wire 1 > c $end
$var wire 1 0 b $end
$var wire 1 / a $end
$upscope $end
$scope module and4 $end
$var wire 1 , a $end
$var wire 1 % b $end
$var wire 1 = c $end
$upscope $end
$scope module and5 $end
$var wire 1 - b $end
$var wire 1 < c $end
$var wire 1 / a $end
$upscope $end
$scope module and6 $end
$var wire 1 & b $end
$var wire 1 ; c $end
$var wire 1 1 a $end
$upscope $end
$scope module and7 $end
$var wire 1 - b $end
$var wire 1 : c $end
$var wire 1 / a $end
$upscope $end
$scope module and8 $end
$var wire 1 , a $end
$var wire 1 ' b $end
$var wire 1 9 c $end
$upscope $end
$scope module and9 $end
$var wire 1 . a $end
$var wire 1 8 c $end
$var wire 1 0 b $end
$upscope $end
$scope module and_D0 $end
$var wire 1 F a $end
$var wire 1 ? b $end
$var wire 1 N c $end
$upscope $end
$scope module and_D1 $end
$var wire 1 > a $end
$var wire 1 = b $end
$var wire 1 M c $end
$upscope $end
$scope module and_D2 $end
$var wire 1 < a $end
$var wire 1 ; b $end
$var wire 1 L c $end
$upscope $end
$scope module and_D3 $end
$var wire 1 : a $end
$var wire 1 9 b $end
$var wire 1 K c $end
$upscope $end
$scope module and_D4 $end
$var wire 1 8 a $end
$var wire 1 E b $end
$var wire 1 J c $end
$upscope $end
$scope module and_D5 $end
$var wire 1 D a $end
$var wire 1 C b $end
$var wire 1 I c $end
$upscope $end
$scope module and_D6 $end
$var wire 1 B a $end
$var wire 1 A b $end
$var wire 1 H c $end
$upscope $end
$scope module finalOr $end
$var wire 1 ! c $end
$var wire 1 2 b $end
$var wire 1 3 a $end
$upscope $end
$scope module not0 $end
$var wire 1 , a $end
$var wire 1 1 b $end
$upscope $end
$scope module not1 $end
$var wire 1 - a $end
$var wire 1 0 b $end
$upscope $end
$scope module not2 $end
$var wire 1 . a $end
$var wire 1 / b $end
$upscope $end
$scope module or1 $end
$var wire 1 N a $end
$var wire 1 M b $end
$var wire 1 7 c $end
$upscope $end
$scope module or2 $end
$var wire 1 L a $end
$var wire 1 K b $end
$var wire 1 6 c $end
$upscope $end
$scope module or3 $end
$var wire 1 J a $end
$var wire 1 I b $end
$var wire 1 5 c $end
$upscope $end
$scope module or4 $end
$var wire 1 H a $end
$var wire 1 G b $end
$var wire 1 4 c $end
$upscope $end
$scope module orFinal1 $end
$var wire 1 7 a $end
$var wire 1 6 b $end
$var wire 1 3 c $end
$upscope $end
$scope module orFinal2 $end
$var wire 1 5 a $end
$var wire 1 4 b $end
$var wire 1 2 c $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0N
0M
0L
0K
0J
0I
0H
0G
1F
0E
0D
0C
0B
0A
0@
0?
1>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
11
10
1/
0.
0-
0,
1+
0*
1)
0(
1'
0&
1%
0$
0#
0"
0!
$end
#10
1"
1!
13
12
17
14
1M
1#
1C
1G
1=
19
01
1,
#20
0"
0!
03
02
07
04
0M
0C
0G
0=
09
0#
1<
1:
0>
0F
11
0,
00
1-
#30
1"
1!
13
12
16
14
1K
1#
1C
1G
1=
19
01
1,
#40
0"
0!
03
02
06
04
0K
0C
0G
0=
09
0#
1D
18
0:
0<
11
0,
10
0-
0/
1.
#50
1"
1!
15
12
1I
14
1#
1C
1G
1=
19
01
1,
#60
0"
0!
02
05
04
0I
0C
0G
0=
09
0#
1B
1@
08
0D
11
0,
00
1-
#70
1!
1"
12
14
1#
1C
1G
1=
19
01
1,
#80
