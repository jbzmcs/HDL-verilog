$date
	Wed Sep 11 23:42:20 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module full_adder_subtractor_tb $end
$var wire 4 ! s [0:3] $end
$var wire 5 " cOut [0:4] $end
$var reg 4 # a [0:3] $end
$var reg 4 $ b [0:3] $end
$var reg 1 % cIn $end
$scope module fa_sub $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cIn $end
$var wire 1 ( xorOut3 $end
$var wire 1 ) xorOut2 $end
$var wire 1 * xorOut1 $end
$var wire 1 + xorOut0 $end
$var wire 4 , s [3:0] $end
$var wire 5 - cOut [4:0] $end
$scope module fa0 $end
$var wire 1 . a $end
$var wire 1 % c $end
$var wire 1 / carry $end
$var wire 1 0 sum $end
$var wire 1 + b $end
$upscope $end
$scope module fa1 $end
$var wire 1 1 a $end
$var wire 1 2 c $end
$var wire 1 3 carry $end
$var wire 1 4 sum $end
$var wire 1 * b $end
$upscope $end
$scope module fa2 $end
$var wire 1 5 a $end
$var wire 1 6 c $end
$var wire 1 7 carry $end
$var wire 1 8 sum $end
$var wire 1 ) b $end
$upscope $end
$scope module fa3 $end
$var wire 1 9 a $end
$var wire 1 : c $end
$var wire 1 ; carry $end
$var wire 1 < sum $end
$var wire 1 ( b $end
$upscope $end
$scope module xor0 $end
$var wire 1 % a $end
$var wire 1 = b $end
$var wire 1 + c $end
$upscope $end
$scope module xor1 $end
$var wire 1 % a $end
$var wire 1 > b $end
$var wire 1 * c $end
$upscope $end
$scope module xor2 $end
$var wire 1 % a $end
$var wire 1 ? b $end
$var wire 1 ) c $end
$upscope $end
$scope module xor3 $end
$var wire 1 % a $end
$var wire 1 @ b $end
$var wire 1 ( c $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
b0 -
b0 ,
0+
0*
0)
0(
b0 '
b0 &
0%
b0 $
b0 #
b0 "
b0 !
$end
#5
14
12
b1 "
b1 -
1/
b10 !
b10 ,
00
1+
1=
1.
b1 $
b1 '
b1 #
b1 &
#10
1;
1:
17
16
b11111 "
b11111 -
13
08
0<
04
b1 !
b1 ,
10
1)
1(
0=
1>
11
1%
b10 $
b10 '
b11 #
b11 &
#15
04
1;
0<
02
1:
10
0/
b1 !
b1 ,
08
b11110 "
b11110 -
17
0+
1*
0)
1=
0>
1?
0.
15
b101 $
b101 '
b110 #
b110 &
#20
0:
07
18
0<
b11010 "
b11010 -
1;
b100 !
b100 ,
00
0=
1>
0?
1@
05
19
0%
b1010 $
b1010 '
b1010 #
b1010 &
#25
12
1:
16
1/
17
13
04
b11111 "
b11111 -
1;
0<
08
b0 !
b0 ,
00
0*
0(
1=
1?
1.
15
1%
b1111 $
b1111 '
b1111 #
b1111 &
#30
